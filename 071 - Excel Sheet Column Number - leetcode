//my solution --1
class Solution {
    public int titleToNumber(String columnTitle) {
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        map.put('A',1);map.put('B',2);map.put('C',3);map.put('D',4);map.put('E',5);map.put('F',6);
        map.put('G',7);map.put('H',8);map.put('I',9);map.put('J',10);map.put('K',11);
        map.put('L',12);map.put('M',13);map.put('N',14);map.put('O',15);map.put('P',16);
        map.put('Q',17);map.put('R',18);map.put('S',19);map.put('T',20);map.put('U',21);
        map.put('V',22);map.put('W',23);map.put('X',24);map.put('Y',25);map.put('Z',26);

        if(columnTitle.length()==1){
            int temp = map.get(columnTitle.charAt(0));
            return temp;
        }
        
        int columnNumber = 0;

        for(int i = 0; i<columnTitle.length()-1; i++){
            columnNumber+=(map.get(columnTitle.charAt(i)) * Math.pow(26,(columnTitle.length()-i-1) ));
        }

        columnNumber+=(map.get(columnTitle.charAt(columnTitle.length()-1)));

        return columnNumber;
    }
}

//my second solution
class Solution {
    public int titleToNumber(String columnTitle) {
        int res =0;

        for(int i=0; i<columnTitle.length(); i++){
            res+=(Math.pow(26,columnTitle.length()-i-1)*(columnTitle.charAt(i)-64));
        }

        return res;
    }
}
