public class Solution {
    // you need treat n as an unsigned value
    public int reverseBits(int n) {
        int res =0;
        // boolean isNegative = n<0;
        for(int i =0; i<32; i++){
            
            if((n&1)==1) res = res | 1;
            res<<=1;
            n>>=1;
            
        }
        // return isNegative?res+1:res;
        return res;
        
//         boolean isNegative = n<0;
        
//         int result =0;
//         int lastBit =0;
//         for(int i=1; i<32; i++){
//             lastBit = n&1;
//             result = result|lastBit;
//             result<<=1;
//             n>>=1;
//         }
//         return isNegative? result+1:result;
        
//         boolean isNegative = n < 0;
        
//         int reverseNumber = 0;
        
//         // counter to track the number of bits in the number
//         int count = 31;
        
//         while(count != 0){

//             int lastBit = n & 1;

//             reverseNumber = reverseNumber | lastBit;

//             reverseNumber = reverseNumber << 1;

//             n = n >> 1;
            
//             count--;
//         }// Now we repeat the process
        
        
//         return isNegative?reverseNumber+1:reverseNumber;
    }
}
