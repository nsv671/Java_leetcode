//my solution
class Solution {
    public String convertToTitle(int columnNumber) {

        HashMap<Integer, String> map = new HashMap<Integer, String>();

        map.put(1,"A");map.put(2,"B");map.put(3,"C");map.put(4,"D");map.put(5,"E");map.put(6,"F");
        map.put(7,"G");map.put(8,"H");map.put(9,"I");map.put(10,"J");map.put(11,"K");
        map.put(12,"L");map.put(13,"M");map.put(14,"N");map.put(15,"O");map.put(16,"P");
        map.put(17,"Q");map.put(18,"R");map.put(19,"S");map.put(20,"T");map.put(21,"U");
        map.put(22,"V");map.put(23,"W");map.put(24,"X");map.put(25,"Y");map.put(26,"Z");

        String res = "";
        
        while(columnNumber>0){
            if(columnNumber<27){
                res=map.get(columnNumber)+res;
                break;
            }
            res=columnNumber%26==0? "Z"+res:map.get(columnNumber%26)+res;

            //because if we do not decrease the number then it will result exact character +1 (i.e if result AAZCD output will be AZZCD )
            if(columnNumber%26==0)
                columnNumber--;


            columnNumber/=26;
        }

        return res;
    }
}


//AFTER SOLUTION DISCUSSION
class Solution {
    public String convertToTitle(int columnNumber) {
        StringBuilder result = new StringBuilder();

        while(columnNumber>0){
            columnNumber--;
            result.insert(0, (char)('A' + columnNumber % 26));
            columnNumber /= 26;
        }

        return result.toString();
    }
}
