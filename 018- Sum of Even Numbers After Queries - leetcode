class Solution {
    public int[] sumEvenAfterQueries(int[] nums, int[][] queries) {
        int length = nums.length;
        
        int[] res = new int[length];
        int[] numsCopy = new int[length];
        int sum = 0;
        int j =0;
        
        //saw from discussion
        
        //doing the sum of all even integer present in nums array
        for(int i=0; i<length ;i++){
            if((nums[i]&1) == 0) sum+=nums[i];
            numsCopy[i] = nums[i];
        }
        
        //iterating over queries array
        for(int[] i : queries){
            
            //assigning the value and index from queries to variable
            int val = i[0]; 
            int index = i[1];
            
            //storing the previous value of nums array
            int previous = nums[index];
            
            //editing the nums valu in the index position
            nums[index]+=val;
            
            //3 case posible
            //EVEN ---> EVEN
            //EVEN ---> ODD
            //ODD  ---> EVEN
            
            //if previous value is even the we are sub stracting the value from sum
            if(previous % 2 ==0 ) sum-=previous;
            
            //after editing the nums index value if it is odd then adding ot to sum
            if(nums[index]%2==0) sum+=nums[index];
            
            res[j++] = sum;
            
        }
        
        //TIME LIMIT EXCEEDING
        //TIME COMPLEXITY = O(N^2)
        
        /*
        int length = nums.length;
        int[] res = new int[length];
        
        for(int i=0; i<length; i++){
            int sum = 0;
            nums[queries[i][1]] = nums[queries[i][1]] + queries[i][0];
            for(int j=0; j<length; j++){
                if((nums[j] & 1) == 0) sum+=nums[j];
            }
            res[i] = sum;
        }
        */
        
        return res;
    }
}
